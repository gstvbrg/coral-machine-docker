#!/bin/bash
# Central configuration for Coral Machine volume setup
# This file is sourced by all installer scripts to ensure consistency
#
# ARCHITECTURE: Single Source of Truth
# - .env file is the master configuration (used by Docker Compose)
# - This file uses environment variables (from .env) with intelligent fallbacks
# - Precedence: .env values â†’ config.env defaults

# ============================================================================
# Core Paths - Used by ALL installers
# ============================================================================
export DEPS_ROOT="/workspace/deps"
export DEPS_BIN="${DEPS_ROOT}/bin"
export DEPS_LIB="${DEPS_ROOT}/lib"
export DEPS_INCLUDE="${DEPS_ROOT}/include"
export DEPS_SHARE="${DEPS_ROOT}/share"

# Workspace paths
export WORKSPACE_ROOT="/workspace"
export CCACHE_DIR="${WORKSPACE_ROOT}/.ccache"
export BUILD_DIR="${WORKSPACE_ROOT}/build"
export SOURCE_DIR="${WORKSPACE_ROOT}/source"
export OUTPUT_DIR="${WORKSPACE_ROOT}/output"
export VTK_DIR="${OUTPUT_DIR}/vtk"

# ============================================================================
# Versions - Use environment (from .env) with fallbacks
# ============================================================================
export NVIDIA_HPC_VERSION=${NVIDIA_HPC_VERSION:-"25.7"}
export NVIDIA_HPC_FILEVERSION=${NVIDIA_HPC_FILEVERSION:-"2025_257"}  # Format: YYYY_YMM or YYYY_YYMM
export PARAVIEW_VERSION=${PARAVIEW_VERSION:-"6.0.0"}
export CUDA_VERSION=${CUDA_VERSION:-"12.9"}

# ============================================================================
# Build Configuration - Use environment (from .env) with fallbacks
# ============================================================================
export BUILD_JOBS=${BUILD_JOBS:-$(nproc)}
export CMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE:-"Release"}
export CMAKE_CXX_STANDARD=${CMAKE_CXX_STANDARD:-"20"}
export CCACHE_SIZE=${CCACHE_SIZE:-"10G"}

# Default compilers for builds (can be overridden per library)
export DEFAULT_CXX_COMPILER="g++"
export DEFAULT_C_COMPILER="gcc"

# ============================================================================
# Repository URLs
# ============================================================================
export NVIDIA_SDK_URL="https://developer.download.nvidia.com/hpc-sdk/${NVIDIA_HPC_VERSION}/nvhpc_${NVIDIA_HPC_FILEVERSION}_Linux_x86_64_cuda_${CUDA_VERSION}.tar.gz"
export PARAVIEW_URL="https://www.paraview.org/files/v6.0/ParaView-${PARAVIEW_VERSION}-MPI-Linux-Python3.12-x86_64.tar.gz"
export PALABOS_REPO="https://github.com/gstvbrg/palabos-hybrid-prerelease.git"
export GEOMETRY_CENTRAL_REPO="https://github.com/nmwsharp/geometry-central.git"
export POLYSCOPE_REPO="https://github.com/nmwsharp/polyscope.git"

# ============================================================================
# Feature Flags - Use environment (from .env) with fallbacks
# ============================================================================
export INSTALL_NVIDIA_HPC=${INSTALL_NVIDIA_HPC:-true}
export INSTALL_PARAVIEW=${INSTALL_PARAVIEW:-true}
export INSTALL_PALABOS=${INSTALL_PALABOS:-true}
export INSTALL_GEOMETRY_CENTRAL=${INSTALL_GEOMETRY_CENTRAL:-true}
export INSTALL_POLYSCOPE=${INSTALL_POLYSCOPE:-true}
export INSTALL_EIGEN3=${INSTALL_EIGEN3:-true}
export INSTALL_GL_HEADERS=${INSTALL_GL_HEADERS:-true}

# ============================================================================
# Marker Files - For idempotent installation
# ============================================================================
export MARKER_DIR="${DEPS_ROOT}/.installed"